# Выводим все четные и нечетные числа, разные варианты

# Функция filter используется для фильтрации элементов итерируемого объекта на основе заданного условия 
def is_even(x):
    return x % 2 == 0


numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
even_numbers = list(filter(is_even, numbers))
print(even_numbers)

even_numbers_2 = list(filter(lambda x: x % 2 != 0, numbers))
print(even_numbers_2)

for i in range(1, 11):
    if i % 2 == 0:
        print(i, end=' ')


# просто с помощью цикла for
def numbers(x):
    for i in range(x):
        if i % 2 == 0:
            yield i


print(list(numbers(11)))

'''В этом коде определены две функции: is_even и is_odd. 
Функция is_even проверяет, является ли число четным, 
а функция is_odd проверяет, является ли число нечетным.

Функция is_even использует рекурсию для проверки четности числа. 
Если число равно 0, функция возвращает True, так как 0 является четным числом. 
В противном случае, функция вызывает функцию is_odd с аргументом x-1 и возвращает результат.

Функция is_odd также использует рекурсию для проверки нечетности числа. 
Она вызывает функцию is_even с аргументом x-1 и возвращает результат, инвертированный с помощью оператора not.
В конце кода вызываются функции is_odd и is_even с аргументом 17 и 23 соответственно. Результаты выводятся на экран.'''


def is_even(x):
    if x == 0:
        return True
    else:
        return is_odd(x - 1)


def is_odd(x):
    return not is_even(x)


print(is_odd(17))
print(is_even(23))
